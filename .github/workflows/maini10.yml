name: Generate Image from Story

on:
  workflow_dispatch:

jobs:
  generate-image:
    runs-on: ubuntu-latest

    env:
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
      HG_TOKEN: ${{ secrets.HG_TOKEN }}
      GH_PAT: ${{ secrets.GH_PAT }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install requests pillow

      - name: Generate prompt and image
        run: |
          python3 - <<EOF
          import os
          import requests
          import json
          import io
          from PIL import Image

          # === CONFIGURATION ===
          STORY_FILE_PATH = "generated_story.txt"
          IMAGE_OUTPUT_DIR = "Images"
          IMAGE_FILENAME = "generated_image_1.png"
          OPENROUTER_MODEL = "nvidia/llama-3.3-nemotron-super-49b-v1:free"
          HF_API_URL = "https://api-inference.huggingface.co/models/black-forest-labs/FLUX.1-dev"

          # === READ STORY ===
          try:
              with open(STORY_FILE_PATH, "r", encoding="utf-8") as f:
                  story = f.read()
          except FileNotFoundError:
              print("Story file not found.")
              exit(1)

          # === GENERATE PROMPT ===
          router_headers = {
              "Authorization": f"Bearer {os.getenv('OPENROUTER_API_KEY')}",
              "Content-Type": "application/json",
              "HTTP-Referer": "https://your-site.com",
              "X-Title": "Image Prompt Creator"
          }

          prompt_request = (
              "You are a creative prompt engineer for AI-generated visuals.\n"
              "Given the story below, write a single detailed and vivid prompt that captures the most dramatic, cinematic, or emotional moment in the story, "
              "or a visual concept based on its title. Use visual keywords suitable for an image generation model like Midjourney or Stable Diffusion.\n"
              "Do not include any story explanations, just the raw image prompt.\n\n"
              f"STORY:\n{story}"
          )

          payload = {
              "model": OPENROUTER_MODEL,
              "messages": [
                  {"role": "user", "content": prompt_request}
              ]
          }

          response = requests.post("https://openrouter.ai/api/v1/chat/completions", headers=router_headers, json=payload)

          if response.status_code != 200:
              print(f"Failed to get prompt: {response.status_code} - {response.text}")
              exit(1)

          prompt_result = response.json()["choices"][0]["message"]["content"].strip()
          print("=== Generated Prompt ===")
          print(prompt_result)

          # === GENERATE IMAGE ===
          hf_headers = {
              "Authorization": f"Bearer {os.getenv('HG_TOKEN')}"
          }

          print("Sending prompt to Hugging Face model...")
          img_response = requests.post(HF_API_URL, headers=hf_headers, json={"inputs": prompt_result})

          if img_response.status_code != 200:
              print(f"Image generation failed: {img_response.status_code} - {img_response.text}")
              exit(1)

          image = Image.open(io.BytesIO(img_response.content))

          # Resize and save the image
          os.makedirs(IMAGE_OUTPUT_DIR, exist_ok=True)
          image_resized = image.resize((1600, 900))
          output_path = os.path.join(IMAGE_OUTPUT_DIR, IMAGE_FILENAME)
          image_resized.save(output_path)

          print(f"Image saved to: {output_path}")
          EOF

      - name: Set up Git identity
        run: |
          git config --global user.name "ansentase"
          git config --global user.email "samomsan7@gmail.com"

      - name: Commit and push generated image
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git add Images/generated_image_1.png
          timestamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          git commit -m "Generated story image: ${timestamp}" || echo "No changes to commit"
          git push https://x-access-token:${GH_PAT}@github.com/ansentase/scriptgen.git HEAD:main
