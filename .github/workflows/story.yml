name: Generate Story with OpenRouter

on:
  workflow_dispatch:

jobs:
  generate-story:
    runs-on: ubuntu-latest

    steps:
      - name: Run Python story generator inline
        run: |
          python3 - <<EOF
          import requests
          import json

          API_KEY = "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"
          API_URL = "https://openrouter.ai/api/v1/chat/completions"

          headers = {
              "Authorization": f"Bearer {API_KEY}",
              "Content-Type": "application/json",
              "HTTP-Referer": "https://your-site.com",
              "X-Title": "Story Generator"
          }

          outline = [
              "Emilia receives a mysterious letter.",
              "She visits the old oak in Riverton Park.",
              "She meets the stranger with cryptic messages.",
              "She learns about her family secret.",
              "She uncovers hidden powers within herself.",
              "She confronts a personal betrayal.",
              "She embarks on a dangerous mission.",
              "She faces a major sacrifice.",
              "She changes the fate of Riverton.",
              "She returns home transformed."
          ]

          previous_parts = ""

          for i, point in enumerate(outline):
              print(f"--- Generating story part {i+1} ---")

              messages = [
                  {
                      "role": "system",
                      "content": (
                          "You are a storytelling AI helping write a coherent story from an outline. "
                          "Focus: Writes at least 500 words for the current outline point. "
                          "Instructions: Emphasizes consistency in characters, tone, and events."
                      )
                  },
                  {
                      "role": "user",
                      "content": (
                          f"Current outline point: {point}\n\n"
                          f"Story so far:\n{previous_parts}\n\n"
                          "Continue the story from the current outline point."
                      )
                  }
              ]

              payload = {
                  "model": "nvidia/llama-3.3-nemotron-super-49b-v1:free",
                  "messages": messages
              }

              response = requests.post(API_URL, headers=headers, data=json.dumps(payload))

              if response.status_code == 200:
                  new_part = response.json()['choices'][0]['message']['content']
                  print(new_part + "\n")
                  previous_parts += new_part + "\n\n"
              else:
                  print(f"Error {response.status_code}: {response.text}")
                  break

          print("--- FULL STORY GENERATED ---")
          EOF
