name: Generate Story from Outline

on:
  workflow_dispatch:
    inputs:
      outline_text:
        description: 'Story outline (each point on a new line)'
        required: true
        type: string

permissions:
  contents: write  # Required for pushing to repo

jobs:
  generate-story:
    runs-on: ubuntu-latest

    steps:  
    - name: Checkout repository  
      uses: actions/checkout@v3  

    - name: Run Story Generator  
      env:  
        INPUT_OUTLINE_TEXT: ${{ github.event.inputs.outline_text }}  
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}  
      run: |  
        python3 - <<EOF  
        import os  
        import json  
        import time  
        import requests  
        import re  

        outline_text = os.getenv("INPUT_OUTLINE_TEXT", "")  
        outline_sections = re.split(r'\\n(?=\\d+\\.\\s)', outline_text.strip())  
        outline_points = [section.strip() for section in outline_sections if section.strip()]  

        url = "https://openrouter.ai/api/v1/chat/completions"  
        headers = {  
            "Authorization": f"Bearer {os.getenv('OPENROUTER_API_KEY')}",  
            "Content-Type": "application/json",  
            "HTTP-Referer": "https://your-site.com",  
            "X-Title": "Story Generator"  
        }  

        def clean_story_output(raw_text):  
            lines = raw_text.splitlines()  
            cleaned_lines = []  
            skip_patterns = [  
                r'^\\s*(\\*+|---+|###*|Point \\d+.*|End of.*|Preparation for.*|Continuity Notes.*|Please Provide.*|Generating story.*|Context.*|Tone:.*|Events:.*|Character Development:.*|NOTE:.*)',  
                r'.*outline.*',
                r'^\\s*[-•]',  # Remove bullet points
                r'^\\s*\\d+\\.',  # Remove numbered lists
                r'^\\s*\\*\\*.*\\*\\*',  # Remove bold headers
                r'.*word count.*',  # Remove word count references
                r'.*section.*requirements.*',  # Remove section requirements
                r'^\\s*\\[.*\\]',  # Remove bracketed content
                r'^\\s*\\|.*\\|',  # Remove table formatting
                r'.*acknowledge.*receipt.*',  # Remove meta instructions
                r'.*table.*allocation.*',  # Remove table references
                r'^\\s*A\\).*B\\).*C\\).*',  # Remove multiple choice options
            ]  
            
            in_stage_direction = False
            for line in lines:  
                # Skip lines that match skip patterns
                if any(re.match(pattern, line, re.IGNORECASE) for pattern in skip_patterns):  
                    continue  
                    
                # Remove stage directions in parentheses
                line = re.sub(r'\\([^)]*\\)', '', line)
                
                # Remove formatting markers
                line = re.sub(r'\\*\\*([^*]+)\\*\\*', r'\\1', line)  # Remove bold
                line = re.sub(r'\\*([^*]+)\\*', r'\\1', line)  # Remove italics
                line = re.sub(r'#{1,6}\\s*', '', line)  # Remove headers
                
                # Skip lines that are just punctuation or very short
                if len(line.strip()) < 3:
                    continue
                    
                # Skip lines with meta-commentary
                if any(word in line.lower() for word in ['note:', 'requirements:', 'section', 'word count', 'please provide', 'acknowledge']):
                    continue
                    
                cleaned_lines.append(line.strip())  
                
            return '\\n'.join(cleaned_lines).strip()  

        def generate_story_part(point, context, index, total):  
            is_first = index == 1  
            is_last = index == total  

            # Enhanced prompt with voiceover-ready specifications
            voiceover_ready_prompt = (
                "CRITICAL: This script must be 100% VOICEOVER-READY. Write ONLY speakable content that flows naturally when read aloud.\\n\\n"
                "VOICEOVER REQUIREMENTS:\\n"
                "- Write in PURE CONVERSATIONAL PROSE only - no bullet points, headers, or formatting\\n"
                "- NO stage directions, parenthetical notes, or character labels\\n"
                "- NO meta-commentary about the script itself\\n"
                "- NO incomplete sections or 'to be continued' references\\n"
                "- Every sentence must be complete and speakable\\n"
                "- Use natural speech rhythm with varied sentence lengths\\n"
                "- Write as if speaking directly to one person in a friendly conversation\\n"
                "- NO artificial dialogue between characters - tell the story as a narrator\\n"
                "- NO formatting symbols (* ** - • # [ ] | etc.)\\n"
                "- NO section breaks or headers within the content\\n\\n"
            )

            youtube_script_prompt = (
                "Write a YouTube script for the given topic that must be started with a powerful Trailer level hook to grab immediate attention. Add a top level hook in the first 30 sec that maintains viewers to watch video from start to end, and then maintain that hook in all over script till end. The script should immediately grab attention and keep viewers hooked. The intro should start by directly proving the video's title claim with a bold and exciting statement. It should make the topic feel important, exclusive, or shocking so that viewers instantly trust that they will get valuable and relevant content. Use simple yet powerful language that builds curiosity and makes them want to keep watching. If possible, include a surprising fact, statistic, or statement that supports the claim. To keep the audience engaged, introduce an element of suspense, danger, mystery, or controversy related to the topic. The goal is to make them feel like they are about to learn something they can't afford to miss. End the intro by teasing what's coming next, making sure the transition into the main content feels natural and exciting. Keep it clear, concise, and full of energy so that viewers stay invested in the video. The tone should match the topic-whether it's thrilling, dramatic, or informative-so that the intro feels like the perfect setup for what's coming next\\n\\n"
                "Structure the script into clear sections, including an introduction, main content and a conclusion with a specific call to action. I do not want a local plz subscribe type call to action, I want a genius call to action, Use engagement techniques like open loops, delayed reveals, Curiosity, fear, and emotional variety to keep viewers interested in video.\\n\\n"
                "Apply a storytelling approach with a beginning, middle, and end, using relatable scenarios and transformations. Maintain a conversational and natural tone, avoiding overly complex language or Al-sounding phrases. Ensure that the script aligns with the expectations set by the title or hint provided, and make the CTA at the end engaging and relevant to the topic.\\n\\n"
                "If there are any relevant, include Well Researched (data, statistics, expert quotes, comparisons etc) Include engaging elements like Rhetorical questions, Contrasts, Humor Cliffhangers before key revelations.\\n\\n"
                "Use easy wording, Write in paragraphs. Do not suggest scenes and clips. Add engaging sentence starters like 'this was shocking, Let me explain how, This is how' and other suitable engaging starters (these are just examples to understand the concept, apply accordingly)\\n\\n"
                "NOTE: I want a genius script. Well researched script with a humorous tone. Also please don't include these words: like, we delve into, Unlock the secrets, Join us on a journey, deep, delve, dive, Embark, journey, Discover, explore, Picture this, unravel, embrace, Picture, Get ready, realm, unravel the secrets, In this realm, Let's dive in, Imagine (because these words sound like AI generated content)\\n\\n"
                "If Duration is above 10 Minutes expand points with more storytelling, examples, and in-depth explanations.\\n\\n"
                "Clearly introduce the video topic, Add emotional or relatable elements that directly hit viewers mind, to keep them engaged\\n\\n"
                "Voice & Tone Must be Friendly, engaging, and conversational. Written as if you're speaking directly to the viewer. No robotic or overly formal tone. Use natural pauses and variation in sentence lengths for a human feel\\n\\n"
                "The most important thing is that I want 5000 Words script, So Write 5000 words script, Don't compromise with me I will count if you write less than given number, so be sure script must be 5000 Words\\n\\n"
                "CRITICAL QUALITY IMPROVEMENTS - Fix these common weaknesses:\\n"
                "- START WITH ACTION/CONFLICT immediately, not lengthy scene descriptions\\n"
                "- Use NATURAL DIALOGUE that sounds like real people talking, avoid formal/artificial speech\\n"
                "- Create FLAWED, REALISTIC CHARACTERS with authentic reactions and vulnerabilities\\n"
                "- SHOW through action rather than TELL through excessive description\\n"
                "- Maintain CONSISTENT PACING - don't drag scenes or rush through important moments\\n"
                "- Give each character DISTINCT VOICE and speech patterns\\n"
                "- Build tension GRADUALLY and naturally, avoid forced dramatic moments\\n"
                "- Make stakes CRYSTAL CLEAR early - what exactly is at risk?\\n"
                "- Use varied sentence lengths and structures to avoid monotony\\n"
                "- Cut purple prose - be concise and impactful, not overwritten\\n"
                "- Ensure smooth scene transitions and logical flow\\n"
                "- Add unexpected character moments that break stereotypes\\n"
                "- Balance exposition with action - don't info-dump through dialogue\\n\\n"
            )

            narrative_flow_prompt = (
                "NARRATIVE STRUCTURE REQUIREMENTS:\\n"
                "- Tell the story as a YouTube narrator speaking directly to the audience\\n"
                "- NO character dialogue scenes - describe what happened instead\\n"
                "- Use 'Elena did this' or 'Elena said that' rather than writing dialogue\\n"
                "- Maintain single narrator voice throughout\\n"
                "- Create smooth transitions between all topics\\n"
                "- Each paragraph should flow naturally to the next\\n"
                "- Complete all thoughts and stories - no cliff-hangers mid-section\\n"
                "- Write in present tense for immediacy\\n\\n"
            )

            completion_prompt = (
                "COMPLETION REQUIREMENTS:\\n"
                "- Every section must be 100% complete with no placeholders\\n"
                "- NO references to 'coming up next' or 'stay tuned' within sections\\n"
                "- NO bullet points or lists - convert everything to flowing sentences\\n"
                "- NO technical formatting or markup\\n"
                "- Write complete stories and explanations, not outlines\\n"
                "- End each section with smooth transition to maintain flow\\n\\n"
            )

            if is_first:  
                prompt = (  
                    f"{voiceover_ready_prompt}"
                    f"{narrative_flow_prompt}"
                    f"{completion_prompt}"
                    f"You are a master YouTube script writer creating an engaging 5000-word video script.\\n\\n"  
                    f"{youtube_script_prompt}"  
                    f"This is the opening section of the script. Write as a YouTube narrator telling the story directly to viewers.\\n"  
                    f"NO character dialogue - describe what Elena and others did and said.\\n"
                    f"Start with immediate impact and maintain engagement throughout.\\n\\n"  
                    f"Topic/Outline Point to develop: {point}\\n\\n"  
                    f"OPENING SECTION REQUIREMENTS:\\n"  
                    f"- Write 1200-1500 words of pure conversational narrative\\n"  
                    f"- Start with powerful hook that grabs attention immediately\\n"  
                    f"- Tell Elena's story as narrator, not through character scenes\\n"  
                    f"- Use natural speaking rhythm with varied sentence lengths\\n"  
                    f"- Build curiosity and maintain viewer interest throughout\\n"  
                    f"- Complete this section fully - no placeholders or outlines\\n"  
                    f"- Write ONLY speakable script content\\n\\n"  
                    f"Begin the YouTube script with immediate narrative impact:"  
                )  
            elif is_last:  
                prompt = (  
                    f"{voiceover_ready_prompt}"
                    f"{narrative_flow_prompt}"
                    f"{completion_prompt}"
                    f"You are a master YouTube script writer crafting the conclusion section.\\n\\n"  
                    f"{youtube_script_prompt}"  
                    f"This is the final section. Bring everything to a powerful conclusion with genius call-to-action.\\n"  
                    f"Continue the narrator voice established in previous sections.\\n\\n"  
                    f"Topic/Outline Point to develop: {point}\\n\\n"  
                    f"Previous Script Context (maintain consistency):\\n{context[-1000:]}\\n\\n"  
                    f"CONCLUSION REQUIREMENTS:\\n"  
                    f"- Write 1200-1500 words of conversational narrative\\n"  
                    f"- Resolve all mysteries and complete Elena's story\\n"  
                    f"- Include genius call-to-action relevant to the topic\\n"  
                    f"- Maintain same narrator voice from previous sections\\n"  
                    f"- Provide satisfying conclusion and emotional impact\\n"  
                    f"- Write ONLY speakable script content\\n\\n"  
                    f"Continue and conclude the YouTube script:"  
                )  
            else:  
                prompt = (  
                    f"{voiceover_ready_prompt}"
                    f"{narrative_flow_prompt}"
                    f"{completion_prompt}"
                    f"You are a master YouTube script writer developing the middle section.\\n\\n"  
                    f"{youtube_script_prompt}"  
                    f"Continue the established narrator voice while advancing Elena's story.\\n"  
                    f"Maintain engagement and build toward the conclusion.\\n\\n"  
                    f"Topic/Outline Point to develop: {point}\\n\\n"  
                    f"Previous Script Context (maintain consistency):\\n{context[-1000:]}\\n\\n"  
                    f"MIDDLE SECTION REQUIREMENTS:\\n"  
                    f"- Write 1200-1500 words of conversational narrative\\n"  
                    f"- Continue same narrator voice from previous sections\\n"  
                    f"- Advance Elena's story with engaging details\\n"  
                    f"- Include research, statistics, and expert insights naturally\\n"  
                    f"- Use rhetorical questions and engaging elements\\n"  
                    f"- Create smooth transitions and maintain interest\\n"  
                    f"- Write ONLY speakable script content\\n\\n"  
                    f"Continue the YouTube script:"  
                )  

            data = {  
                "model": "nvidia/llama-3.3-nemotron-super-49b-v1:free",  
                "messages": [  
                    {"role": "user", "content": prompt}  
                ]  
            }  

            response = requests.post(url, headers=headers, data=json.dumps(data))  
            if response.status_code == 200:  
                result = response.json()  
                raw_story = result['choices'][0]['message']['content']  
                cleaned_story = clean_story_output(raw_story)
                
                # Additional cleaning for voiceover readiness
                cleaned_story = re.sub(r'\\n\\s*\\n\\s*\\n+', '\\n\\n', cleaned_story)  # Remove excessive line breaks
                cleaned_story = re.sub(r'^\\s*---.*$', '', cleaned_story, flags=re.MULTILINE)  # Remove section dividers
                cleaned_story = re.sub(r'\\bPart \\d+\\b', '', cleaned_story)  # Remove part references
                
                return cleaned_story
            else:  
                print(f"Error {response.status_code}: {response.text}")  
                return None  

        def main():  
            full_story = ""  
            total_points = len(outline_points)  
            for idx, point in enumerate(outline_points, start=1):  
                print(f"--- Generating script part {idx} ---")  
                story_part = generate_story_part(point, full_story, idx, total_points)  
                if story_part:  
                    print(story_part)  
                    print("\\n")  
                    full_story += "\\n\\n" + story_part  
                    time.sleep(2)  
                else:  
                    print(f"Failed to generate part {idx}. Stopping.")  
                    break  

            # Final cleaning pass for the complete story
            full_story = full_story.strip()
            full_story = re.sub(r'\\n{3,}', '\\n\\n', full_story)  # Normalize spacing
            full_story = re.sub(r'^\\s*[-•*].*$', '', full_story, flags=re.MULTILINE)  # Remove any remaining bullets
            full_story = re.sub(r'\\([^)]*\\)', '', full_story)  # Remove any remaining parentheticals
            
            with open("generated_story.txt", "w") as f:  
                f.write(full_story)  

        if __name__ == "__main__":  
            main()  
        EOF  

    - name: Set up Git identity  
      run: |  
        git config --global user.name "ansentase"  
        git config --global user.email "samomsan7@gmail.com"  

    - name: Commit and push generated story  
      env:  
        GH_PAT: ${{ secrets.GH_PAT }}  
      run: |  
        git add generated_story.txt  
        timestamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")  
        git commit -m "Generated story: ${timestamp}" || echo "No changes to commit"  
        git push https://x-access-token:${GH_PAT}@github.com/ansentase/scriptgen.git HEAD:main
