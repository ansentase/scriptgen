name: Generate Story from Outline

on:
  workflow_dispatch:
    inputs:
      outline_text:
        description: 'Story outline (each point on a new line)'
        required: true
        type: string

permissions:
  contents: write  # Required for pushing to repo

jobs:
  generate-story:
    runs-on: ubuntu-latest

    steps:  
    - name: Checkout repository  
      uses: actions/checkout@v3  

    - name: Run Story Generator  
      env:  
        INPUT_OUTLINE_TEXT: ${{ github.event.inputs.outline_text }}  
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}  
      run: |  
        python3 - <<EOF  
        import os  
        import json  
        import time  
        import requests  
        import re  

        outline_text = os.getenv("INPUT_OUTLINE_TEXT", "")  
        outline_sections = re.split(r'\\n(?=\\d+\\.\\s)', outline_text.strip())  
        outline_points = [section.strip() for section in outline_sections if section.strip()]  

        url = "https://openrouter.ai/api/v1/chat/completions"  
        headers = {  
            "Authorization": f"Bearer {os.getenv('OPENROUTER_API_KEY')}",  
            "Content-Type": "application/json",  
            "HTTP-Referer": "https://your-site.com",  
            "X-Title": "Story Generator"  
        }  

        def clean_story_output(raw_text):  
            lines = raw_text.splitlines()  
            cleaned_lines = []  
            skip_patterns = [  
                r'^\\s*(\\*+|---+|###*|Point \\d+.*|End of.*|Preparation for.*|Continuity Notes.*|Please Provide.*|Generating story.*|Context.*|Tone:.*|Events:.*|Character Development:.*|NOTE:.*)',  
                r'.*outline.*'  
            ]  
            for line in lines:  
                if any(re.match(pattern, line, re.IGNORECASE) for pattern in skip_patterns):  
                    continue  
                if "NOTE:" in line or line.strip().endswith(":"):  
                    continue  
                cleaned_lines.append(line)  
            return '\\n'.join(cleaned_lines).strip()  

        def generate_story_part(point, context, index, total):  
            is_first = index == 1  
            is_last = index == total  

            # Updated monologue-style prompt with easy language focus
            monologue_style_prompt = (  
                f"\\nSTYLE AND LANGUAGE REQUIREMENTS:\\n"  
                f"- Write as a dramatic monologue narrator speaking directly to the audience\\n"  
                f"- Use SIMPLE, CLEAR language that a 12-year-old can easily understand\\n"  
                f"- Use present tense and immediate, engaging language\\n"  
                f"- Keep sentences SHORT and PUNCHY - avoid complex grammar\\n"  
                f"- Use everyday vocabulary - replace fancy words with common ones\\n"  
                f"- Write like you're telling a friend an exciting story\\n"  
                f"- Include audience engagement: 'Before we continue, smash that like button and tell us where you're watching from'\\n"  
                f"- Start with powerful hooks: 'Everyone laughed when...' or 'Nobody saw this coming'\\n"  
                f"- Mix very short sentences (3-5 words) with slightly longer ones (10-15 words max)\\n"  
                f"- Use conversational tone: 'Here's the crazy part', 'You won't believe this', 'Wait for it'\\n"  
                f"- Include dramatic pauses and cliffhangers\\n"  
                f"- Address audience directly: 'Your support means everything', 'You guys are amazing'\\n"  
                f"- Use simple suspense phrases: 'What happened next will blow your mind', 'But they had no idea what was coming'\\n"  
                f"- Build tension with easy phrases: 'Something big was about to happen', 'This changed everything'\\n"  
                f"- Use emotional but simple descriptors: 'The room went dead quiet', 'Nobody moved', 'Hearts were racing'\\n"  
                f"- Use simple transitions: 'But here's the thing', 'Now this is where it gets crazy', 'And then...'\\n"  
                f"- Avoid jargon, technical terms, or complex descriptions\\n"  
                f"- Use active voice always: 'She fixed it' not 'It was fixed by her'\\n"  
                f"- Include repetition for emphasis: 'She was not ordinary. She was not average. She was unstoppable.'\\n"  
                f"- Use numbers and specific details: 'In just 2 minutes', '15 years ago', 'worth 4 million dollars'\\n"  
                f"- End sections with simple but powerful cliffhangers\\n"  
                f"- Write like a YouTube storyteller - casual, exciting, and easy to follow\\n"  
            )  

            if is_first:  
                prompt = (  
                    f"You are a dramatic storyteller creating a monologue-style script for a powerful story video.\\n"  
                    f"Write the opening using SIMPLE, EASY language that anyone can understand.\\n"  
                    f"Speak directly to the audience like you're telling a friend an exciting story.\\n"  
                    f"\\nOutline Point to dramatize: {point}\\n\\n"  
                    f"OPENING REQUIREMENTS:\\n"  
                    f"- Start with a powerful hook that grabs attention immediately\\n"  
                    f"- Use SIMPLE words and SHORT sentences\\n"  
                    f"- Include audience engagement ('Before we start, hit that like button and tell us where you're from!')\\n"  
                    f"- Set up the main conflict using easy-to-understand language\\n"  
                    f"- Use present tense throughout\\n"  
                    f"- Write like you're speaking, not writing a book\\n"  
                    f"- Make it conversational and exciting\\n"  
                    f"- Write at least 500 words\\n"  
                    f"\\nEXAMPLE SIMPLE STYLE:\\n"  
                    f"'Everyone laughed at her. The CEO pointed at the janitor's teenage daughter. He said, \"Fix this engine and I'll pay for your college.\" They thought she would run away scared. She didn't. She walked forward. She rolled up her sleeves. What happened next shocked everyone. But hidden under all that metal was a family secret. A secret that would destroy the company. She wasn't just some girl. She was unstoppable. Before we start, smash that like button and comment where you're watching from. Your support keeps these stories coming. Now let's begin.'\\n"  
                    f"\\nRemember: Use simple words, short sentences, and speak directly to viewers.\\n"  
                    f"Write ONLY the monologue script - no titles, headers, or explanations.\\n"  
                    + monologue_style_prompt  
                )  
            elif is_last:  
                prompt = (  
                    f"You are a dramatic storyteller creating the finale of a monologue-style story script.\\n"  
                    f"Use SIMPLE, EASY language that anyone can understand.\\n"  
                    f"Continue the story and bring it to a powerful, satisfying conclusion.\\n"  
                    f"\\nOutline Point to dramatize: {point}\\n\\n"  
                    f"Previous Story Context:\\n{context}\\n\\n"  
                    f"FINALE REQUIREMENTS:\\n"  
                    f"- Keep the same simple, conversational narrator voice\\n"  
                    f"- Use SHORT sentences and SIMPLE words\\n"  
                    f"- Resolve the main conflict powerfully but clearly\\n"  
                    f"- Include final revelations that are easy to follow\\n"  
                    f"- End with impact and clear meaning\\n"  
                    f"- Include a final call-to-action for the audience\\n"  
                    f"- Use present tense throughout\\n"  
                    f"- Write like you're speaking to a friend\\n"  
                    f"- Make the ending satisfying and clear\\n"  
                    f"- Write at least 500 words\\n"  
                    f"\\nRemember: Keep it simple, clear, and exciting.\\n"  
                    f"Write ONLY the monologue script - no titles, headers, or explanations.\\n"  
                    + monologue_style_prompt  
                )  
            else:  
                prompt = (  
                    f"You are a dramatic storyteller continuing a monologue-style story script.\\n"  
                    f"Continue the story from where we left off, maintaining the same engaging narrator voice.\\n"  
                    f"\\nOutline Point to dramatize: {point}\\n\\n"  
                    f"Previous Story Context:\\n{context}\\n\\n"  
                    f"CONTINUATION REQUIREMENTS:\\n"  
                    f"- Maintain the same dramatic narrator voice speaking to the audience\\n"  
                    f"- Build on the previous events seamlessly\\n"  
                    f"- Escalate tension and drama\\n"  
                    f"- Include cliffhangers and dramatic reveals\\n"  
                    f"- Use present tense throughout\\n"  
                    f"- Keep the audience engaged with direct address\\n"  
                    f"- Write at least 500 words\\n"  
                    f"\\nWrite ONLY the monologue script - no titles, headers, or explanations.\\n"  
                    + monologue_style_prompt  
                )  

            data = {  
                "model": "nvidia/llama-3.3-nemotron-super-49b-v1:free",  
                "messages": [  
                    {"role": "user", "content": prompt}  
                ]  
            }  

            response = requests.post(url, headers=headers, data=json.dumps(data))  
            if response.status_code == 200:  
                result = response.json()  
                raw_story = result['choices'][0]['message']['content']  
                return clean_story_output(raw_story)  
            else:  
                print(f"Error {response.status_code}: {response.text}")  
                return None  

        def main():  
            full_story = ""  
            total_points = len(outline_points)  
            for idx, point in enumerate(outline_points, start=1):  
                print(f"--- Generating story part {idx} ---")  
                story_part = generate_story_part(point, full_story, idx, total_points)  
                if story_part:  
                    print(story_part)  
                    print("\\n")  
                    full_story += "\\n" + story_part  
                    time.sleep(2)  
                else:  
                    print(f"Failed to generate part {idx}. Stopping.")  
                    break  

            with open("generated_story.txt", "w") as f:  
                f.write(full_story.strip())  

        if __name__ == "__main__":  
            main()  
        EOF  

    - name: Set up Git identity  
      run: |  
        git config --global user.name "ansentase"  
        git config --global user.email "samomsan7@gmail.com"  

    - name: Commit and push generated story  
      env:  
        GH_PAT: ${{ secrets.GH_PAT }}  
      run: |  
        git add generated_story.txt  
        timestamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")  
        git commit -m "Generated story: ${timestamp}" || echo "No changes to commit"  
        git push https://x-access-token:${GH_PAT}@github.com/ansentase/scriptgen.git HEAD:main
