name: Create Final Video

on:
  workflow_dispatch:

jobs:
  create_video:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with LFS
        uses: actions/checkout@v4
        with:
          lfs: true
          token: ${{ secrets.GH_PAT }}

      - name: Install Git LFS and pull large files
        run: |
          git lfs install
          git lfs pull

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install moviepy imageio imageio-ffmpeg
          pip list | grep -E "(moviepy|imageio)"

      - name: Verify files exist
        run: |
          ls -la
          ls -la Images/ || echo "Images directory not found"
          ls -la *.mp3 || echo "No mp3 files found"

      - name: Create video from image and audio using moviepy
        run: |
          mkdir -p Videos
          python3 -c "
import sys
print('Python version:', sys.version)
try:
    from moviepy.editor import AudioFileClip, ImageClip
    print('MoviePy imported successfully')
    
    image_path = 'Images/generated_image_1.png'
    audio_path = 'generated_story.mp3'
    output_path = 'Videos/final_video.mp4'
    
    print(f'Loading audio from: {audio_path}')
    audio_clip = AudioFileClip(audio_path)
    print(f'Audio duration: {audio_clip.duration} seconds')
    
    print(f'Loading image from: {image_path}')
    image_clip = ImageClip(image_path).set_duration(audio_clip.duration).set_audio(audio_clip)
    
    print('Creating video...')
    video = image_clip.resize((1920, 1080)).set_fps(24)
    video.write_videofile(output_path, codec='libx264', audio_codec='aac', preset='ultrafast', verbose=False, logger=None)
    print(f'Video created successfully: {output_path}')
    
except Exception as e:
    print(f'Error: {e}')
    import traceback
    traceback.print_exc()
    sys.exit(1)
"

      - name: Set up Git identity
        run: |
          git config --global user.name "ansentase"
          git config --global user.email "samomsan7@gmail.com"

      - name: Track video with Git LFS
        run: |
          git lfs track "Videos/*.mp4"
          git add .gitattributes

      - name: Commit and push final video
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git add Videos/final_video.mp4
          timestamp=$(date -u)
          git commit -m "Add final video: ${timestamp}" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git
          git push
